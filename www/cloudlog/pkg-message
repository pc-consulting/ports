
1. Cloudlog needs a mysql type database to store its data.
   I have installed a sample sequence of commands which you
   should execute in the database to prepare for cloudlog at:
      /usr/local/share/examples/cloudlog/files/mysql-setup-cloudlog.sql.sample
   Take a copy of that file, replace 'user' with the database
   user of your preference, and 'userpassword' with a secret
   only known to you. Connect to your database as database
   administrator, typically as root user with
      mysql
   and execute your script with
      source /path/to/your/script
   When done, add the password to your password store (or
   just memorize it), and remove your script so that the
   secret remains secret.

2. Cloudlog also needs a web server to operate from.
   I have installed for you a sample nginx config file at:
      /usr/local/etc/nginx/nginx.conf.cloudlog-sample
   If you do not othewise have an nginx configuration made,
   you simply could replace the nginx port's default config
   with this one.
   Please also find a corresponding cloudlog nginx config file at:
      /usr/local/etc/nginx/conf.d/cloudlog.conf
   The sample nginx.conf would start nginx with that configuration.
   Cloudlog uses php-fpm for which I stored a config file at:
      /usr/local/etc/php-fpm.d/cloudlog.conf
   The default php-fpm configuration would use that automatically.
   Once done, you should be able to activate the updated nginx with:
      service nginx restart

3. Once database and webserver are ready, you may run the
   cloudlog install wizard via a web browser. The default
   installation described above makes cloudlog accessible at:
      https://localhost:7355/
   When you have completed the install wizard, you can start
   to locally log with cloudlog at that URL.

4. If you seek further reading, here's a good point to start:
      https://github.com/magicbug/Cloudlog/wiki/

5. If you wish to run cloudlog on the public internet, please
   do ensure that you appropriately secure your service. A good
   idea is to connect via an independent instance, for instance
   something like a separate OPNsense-based server, e. g.:
      https://docs.opnsense.org/manual/how-tos/haproxy.html

Happy dx-ing and best 73s, 55, etc. de Peter DL5BCT.
