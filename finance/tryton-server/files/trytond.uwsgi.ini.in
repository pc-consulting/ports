[uwsgi]
#uWSGI settings, cf. https://www.bloomberg.com/company/stories/configuring-uwsgi-production-deployment
strict = true
master = true
enable-threads = true
vacuum = true
single-interpreter = true
die-on-term = true
need-app = true

disable-logging = true
log-4xx = true
log-5xx = true

harakiri = 120
# This option seems to have gone.
#py-callos-afterfork = true

max-requests = 1000
max-worker-lifetime = 3600
reload-on-rss = 2048
worker-reload-mercy = 60

cheaper-algo = busyness
processes = 32
cheaper = 8
cheaper-initial = 16
cheaper-overload = 1
cheaper-step = 16

cheaper-busyness-multiplier = 30
cheaper-busyness-min = 20
cheaper-busyness-max = 70
#cheaper-busyness-backlog-alert = 16
#cheaper-busyness-backlog-step = 2

# Actual trytond items.
# procname-prefix is not helpful _stopping_ via service/rc.d.
# Strong suggestion to leave the uWSGI defaults in. Set at your own risk.
#procname-prefix = "trytond "
uwsgi-socket = localhost:8421
master = true
wsgi = trytond.application:app
processes = 16
threads= 16
# Environment variables, see https://docs.tryton.org/projects/server/en/latest/topics/start_server.html#wsgi-server
env = TRYTOND_CONFIG=%%PREFIX%%/etc/trytond.conf
# trytond seems to choke on the logging configuration at this time...?
#env = TRYTOND_LOGGING_CONFIG=%%PREFIX%%/etc/tryton.logconf
# Should be possible to control form tryton.logconf but that seems ineffective.
# If you set it here, you must use the _numerical_ values from
# https://docs.python.org/3/library/logging.html#levels
# Common values apparently are as follows.
#  0 - NOTSET (i. e. output everything there is)
# 10 - DEBUG
# 20 - INFO
# 30 - WARNING
# 40 - ERROR
# 50 - CRITICAL
env = TRYTOND_LOGGING_LEVEL=30
# env = TRYTOND_LOGGING_LEVEL=0
# trytond seems to choke on coroutine at this time...?
#env = TRYTOND_COROUTINE=YES
# Let's also just set the database in one single place, please, i. e. trtond.conf
# env = TRYTOND_DATABASE_NAMES=db
